<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE dictionary SYSTEM "file://localhost/System/Library/DTDs/sdef.dtd">
<dictionary title="Vienna Terminology">
	<suite name="Standard Suite" code="????" description="Common classes and commands for all applications.">
		<command name="close" code="coreclos" description="Close a document.">
			<cocoa class="NSCloseCommand"/>
			<access-group identifier="*"/>
			<direct-parameter type="specifier" requires-access="r" description="the document(s) or window(s) to close."/>
		</command>
		<enumeration name="printing error handling" code="enum">
			<enumerator name="standard" code="lwst" description="Standard PostScript error handling">
				<cocoa boolean-value="NO"/>
			</enumerator>
			<enumerator name="detailed" code="lwdt" description="print a detailed report of PostScript errors">
				<cocoa boolean-value="YES"/>
			</enumerator>
		</enumeration>
		<record-type name="print settings" code="pset">
			<property name="copies" code="lwcp" type="integer" description="the number of copies of a document to be printed">
				<cocoa key="NSCopies"/>
			</property>
			<property name="collating" code="lwcl" type="boolean" description="Should printed copies be collated?">
				<cocoa key="NSMustCollate"/>
			</property>
			<property name="starting page" code="lwfp" type="integer" description="the first page of the document to be printed">
				<cocoa key="NSFirstPage"/>
			</property>
			<property name="ending page" code="lwlp" type="integer" description="the last page of the document to be printed">
				<cocoa key="NSLastPage"/>
			</property>
			<property name="pages across" code="lwla" type="integer" description="number of logical pages laid across a physical page">
				<cocoa key="NSPagesAcross"/>
			</property>
			<property name="pages down" code="lwld" type="integer" description="number of logical pages laid out down a physical page">
				<cocoa key="NSPagesDown"/>
			</property>
			<property name="requested print time" code="lwqt" type="date" description="the time at which the desktop printer should print the document">
				<cocoa key="NSPrintTime"/>
			</property>
			<property name="error handling" code="lweh" type="printing error handling" description="how errors are handled">
				<cocoa key="NSDetailedErrorReporting"/>
			</property>
			<property name="fax number" code="faxn" type="text" description="for fax number">
				<cocoa key="NSFaxNumber"/>
			</property>
			<property name="target printer" code="trpr" type="text" description="for target printer">
				<cocoa key="NSPrinterName"/>
			</property>
		</record-type>
		<command name="print" code="aevtpdoc" description="Print a document.">
			<direct-parameter description="The file(s), document(s), or window(s) to be printed.">
				<type type="file" list="yes"/>
				<type type="specifier"/>
			</direct-parameter>
			<parameter name="with properties" code="prdt" type="print settings" optional="yes" description="The print settings to use.">
				<cocoa key="PrintSettings"/>
			</parameter>
			<parameter name="print dialog" code="pdlg" type="boolean" optional="yes" description="Should the application show the print dialog?">
				<cocoa key="ShowPrintDialog"/>
			</parameter>
		</command>
		<command name="quit" code="aevtquit" description="Quit the application.">
			<cocoa class="NSQuitCommand"/>
		</command>
		<command name="count" code="corecnte" description="Return the number of elements of a particular class within an object.">
			<cocoa class="NSCountCommand"/>
			<access-group identifier="*"/>
			<direct-parameter type="specifier" requires-access="r" description="The objects to be counted."/>
			<parameter name="each" code="kocl" type="type" optional="yes" description="The class of objects to be counted." hidden="yes">
				<cocoa key="ObjectClass"/>
			</parameter>
			<result type="integer" description="The count."/>
		</command>
		<command name="delete" code="coredelo" description="Delete an object.">
			<cocoa class="NSDeleteCommand"/>
			<access-group identifier="*"/>
			<direct-parameter type="specifier" description="The object(s) to delete."/>
		</command>
		<command name="duplicate" code="coreclon" description="Copy an object.">
			<cocoa class="NSCloneCommand"/>
			<access-group identifier="*"/>
			<direct-parameter type="specifier" requires-access="r" description="The object(s) to copy."/>
			<parameter name="to" code="insh" type="location specifier" description="The location for the new copy or copies." optional="yes">
				<cocoa key="ToLocation"/>
			</parameter>
			<parameter name="with properties" code="prdt" type="record" description="Properties to set in the new copy or copies right away." optional="yes">
				<cocoa key="WithProperties"/>
			</parameter>
		</command>
		<command name="exists" code="coredoex" description="Verify that an object exists.">
			<cocoa class="NSExistsCommand"/>
			<access-group identifier="*"/>
			<direct-parameter type="any" requires-access="r" description="The object(s) to check."/>
			<result type="boolean" description="Did the object(s) exist?"/>
		</command>
		<command name="make" code="corecrel" description="Create a new object.">
			<cocoa class="NSCreateCommand"/>
			<access-group identifier="*"/>
			<parameter name="new" code="kocl" type="type" description="The class of the new object.">
				<cocoa key="ObjectClass"/>
			</parameter>
			<parameter name="at" code="insh" type="location specifier" optional="yes" description="The location at which to insert the object.">
				<cocoa key="Location"/>
			</parameter>
			<parameter name="with data" code="data" type="any" optional="yes" description="The initial contents of the object.">
				<cocoa key="ObjectData"/>
			</parameter>
			<parameter name="with properties" code="prdt" type="record" optional="yes" description="The initial values for properties of the object.">
				<cocoa key="KeyDictionary"/>
			</parameter>
			<result type="specifier" description="The new object."/>
		</command>
		<command name="move" code="coremove" description="Move an object to a new location.">
			<cocoa class="NSMoveCommand"/>
			<access-group identifier="*"/>
			<direct-parameter type="specifier" requires-access="r" description="The object(s) to move."/>
			<parameter name="to" code="insh" type="location specifier" description="The new location for the object(s).">
				<cocoa key="ToLocation"/>
			</parameter>
		</command>
		<class name="application" code="capp" description="The application's top-level scripting object.">
			<cocoa class="NSApplication"/>
			<property name="name" code="pnam" type="text" access="r" description="The name of the application."/>
			<property name="frontmost" code="pisf" type="boolean" access="r" description="Is this the active application?">
				<cocoa key="isActive"/>
			</property>
			<property name="version" code="vers" type="text" access="r" description="The version number of the application."/>
			<element type="window" access="r">
				<cocoa key="orderedWindows"/>
			</element>
			<responds-to command="print">
				<cocoa method="handlePrintScriptCommand:"/>
			</responds-to>
			<responds-to command="quit">
				<cocoa method="handleQuitScriptCommand:"/>
			</responds-to>
		</class>
		<class name="window" code="cwin" description="A window.">
			<cocoa class="NSWindow"/>
			<property name="name" code="pnam" type="text" access="r" description="The title of the window.">
				<cocoa key="title"/>
			</property>
			<property name="id" code="ID  " type="integer" access="r" description="The unique identifier of the window.">
				<cocoa key="uniqueID"/>
			</property>
			<property name="index" code="pidx" type="integer" description="The index of the window, ordered front to back.">
				<cocoa key="orderedIndex"/>
			</property>
			<property name="bounds" code="pbnd" type="rectangle" description="The bounding rectangle of the window.">
				<cocoa key="boundsAsQDRect"/>
			</property>
			<property name="closeable" code="hclb" type="boolean" access="r" description="Does the window have a close button?">
				<cocoa key="hasCloseBox"/>
			</property>
			<property name="miniaturizable" code="ismn" type="boolean" access="r" description="Does the window have a minimize button?">
				<cocoa key="isMiniaturizable"/>
			</property>
			<property name="miniaturized" code="pmnd" type="boolean" description="Is the window minimized right now?">
				<cocoa key="isMiniaturized"/>
			</property>
			<property name="resizable" code="prsz" type="boolean" access="r" description="Can the window be resized?">
				<cocoa key="isResizable"/>
			</property>
			<property name="visible" code="pvis" type="boolean" description="Is the window visible right now?">
				<cocoa key="isVisible"/>
			</property>
			<property name="zoomable" code="iszm" type="boolean" access="r" description="Does the window have a zoom button?">
				<cocoa key="isZoomable"/>
			</property>
			<property name="zoomed" code="pzum" type="boolean" description="Is the window zoomed right now?">
				<cocoa key="isZoomed"/>
			</property>
			<responds-to command="close">
				<cocoa method="handleCloseScriptCommand:"/>
			</responds-to>
			<responds-to command="print">
				<cocoa method="handlePrintScriptCommand:"/>
			</responds-to>
		</class>
	</suite>
	<suite name="Vienna Suite" code="Vnna" description="Classes and commands for Vienna">
		<class name="application" plural="applications" code="capp" inherits="application" description="Vienna top level scripting object">
			<cocoa class="ViennaApp"/>
			<property type="text" name="application version" code="apVE" access="r" description="The build number for the Vienna application bundle" hidden="yes">
				<cocoa key="version"/>
			</property>
			<property type="text" name="article list font" code="mlFt" description="The font used in the article list pane">
				<cocoa key="articleListFont"/>
			</property>
			<property type="integer" name="article list font size" code="mlFS" description="The size of the font used in the article list pane">
				<cocoa key="articleListFontSize"/>
			</property>
			<property type="integer" name="auto expire duration" code="opED" description="The duration of articles before they are expired to the trash">
				<cocoa key="autoExpireDuration"/>
			</property>
			<property type="boolean" name="check for new on startup" code="cnSU" description="Check for new versions of Vienna on startup">
				<cocoa key="checkForNewOnStartup"/>
			</property>
			<property type="article" name="current article" code="cuAR" description="The current selected article being shown in the article list pane">
				<cocoa key="currentArticle"/>
			</property>
			<property type="folder" name="current folder" code="cuFL" description="The current folder in the article list pane">
				<cocoa key="currentFolder"/>
			</property>
			<property type="text" name="current selection" code="cuSE" access="r" description="Returns the text selected in the current article or web page">
				<cocoa key="currentTextSelection"/>
			</property>
			<property type="text" name="display style" code="dpSY" description="The current display style for articles">
				<cocoa key="displayStyle"/>
			</property>
			<property type="text" name="documentHTMLSource" code="dSdS" access="r" description="The source of the currently open tab">
				<cocoa key="documentHTMLSource"/>
			</property>
			<property type="text" name="documentTabURL" code="dSmU" access="r" description="The URL of the currently open tab">
				<cocoa key="documentTabURL"/>
			</property>
			<property type="boolean" name="enable minimum font size" code="enMF" description="Enable minimum font size">
				<cocoa key="enableMinimumFontSize"/>
			</property>
			<property type="boolean" name="filter bar visible" code="fbVS" description="shows or hides the filter bar">
				<cocoa key="filterBarVisible"/>
			</property>
			<property type="integer" name="filter by" code="flMO" description="Sets how articles are filtered in the display list">
				<cocoa key="filterMode"/>
			</property>
			<property type="text" name="folder list font" code="flFn" description="The font used in the folder list pane">
				<cocoa key="folderListFont"/>
			</property>
			<property type="integer" name="folder list font size" code="flFS" description="The size of the font used in the folder list pane">
				<cocoa key="folderListFontSize"/>
			</property>
			<property type="real" name="mark read interval" code="mrIN" description="The interval after an article is displayed before it is marked read">
				<cocoa key="markReadInterval"/>
			</property>
			<property type="integer" name="minimum font size" code="mnFS" description="The minimum font size used when displaying article text">
				<cocoa key="minimumFontSize"/>
			</property>
			<property type="boolean" name="open links in background" code="opLB" description="Whether the default browser is activated when Vienna opens new links">
				<cocoa key="openLinksInBackground"/>
			</property>
			<property type="boolean" name="open links in Vienna" code="opLV" description="Whether links are opened in the Vienna browser or the default system browser">
				<cocoa key="openLinksInVienna"/>
			</property>
			<property type="boolean" name="reading pane on right" code="rpRI" access="r" description="Whether the reading pane is to the right of the article list">
				<cocoa key="readingPaneOnRight"/>
			</property>
			<property type="integer" name="refresh frequency" code="chkF" description="The frequency (in milliseconds) with which we refresh all subscriptions">
				<cocoa key="refreshFrequency"/>
			</property>
			<property type="boolean" name="refresh on startup" code="rfSU" description="Whether Vienna refreshes all subscriptions when it starts">
				<cocoa key="refreshOnStartup"/>
			</property>
			<property type="boolean" name="refreshing" code="isCO" access="r" description="Returns whether Vienna is currently doing a refresh">
				<cocoa key="isRefreshing"/>
			</property>
			<property type="boolean" name="status bar visible" code="sbVS" description="shows or hides the main window status bar">
				<cocoa key="statusBarVisible"/>
			</property>
			<property type="integer" name="total unread count" code="unCO" access="r" description="Returns the total count of unread articles">
				<cocoa key="totalUnreadCount"/>
			</property>
			<responds-to command="compact database">
				<cocoa method="handleCompactDatabase:"/>
			</responds-to>
			<responds-to command="create new subscription">
				<cocoa method="handleNewSubscription:"/>
			</responds-to>
			<responds-to command="empty trash">
				<cocoa method="handleEmptyTrash:"/>
			</responds-to>
			<responds-to command="export subscriptions">
				<cocoa method="handleExportSubscriptions:"/>
			</responds-to>
			<responds-to command="import subscriptions">
				<cocoa method="handleImportSubscriptions:"/>
			</responds-to>
			<responds-to command="mark all read">
				<cocoa method="handleMarkAllRead:"/>
			</responds-to>
			<responds-to command="mark all subscriptions read">
				<cocoa method="handleMarkAllSubscriptionsRead:"/>
			</responds-to>
			<responds-to command="refresh all subscriptions">
				<cocoa method="handleRefreshAllSubscriptions:"/>
			</responds-to>
			<responds-to command="refresh subscription">
				<cocoa method="handleRefreshSubscription:"/>
			</responds-to>
			<responds-to command="reset folder sort">
				<cocoa method="resetFolderSort:"/>
			</responds-to>
			<element type="folder" access="r">
				<cocoa key="folders"/>
			</element>
		</class>
		<class name="folder" plural="folders" code="flDR" description="A single folder">
			<cocoa class="Folder"/>
			<property type="text" name="description" code="flDE" access="r" description="The folder&apos;s description">
				<cocoa key="description"/>
			</property>
			<property type="boolean" name="group folder" code="flIG" access="r" description="Returns a true value if the folder is a group folder">
				<cocoa key="isGroupFolder"/>
			</property>
			<property type="text" name="home page" code="flHP" access="r" description="The folder&apos;s feed home site">
				<cocoa key="homePage"/>
			</property>
			<property type="text" name="name" code="pnam" access="r" description="The name of a folder">
				<cocoa key="name"/>
			</property>
			<property type="boolean" name="rss folder" code="flIR" access="r" description="Returns a true value if the folder is an RSS subscription">
				<cocoa key="isRSSFolder"/>
			</property>
			<property type="boolean" name="smart folder" code="flIS" access="r" description="Returns a strue value if the folder is a smart folder">
				<cocoa key="isSmartFolder"/>
			</property>
			<property type="integer" name="unread count" code="flUN" access="r" description="The number of unread articles in the folder">
				<cocoa key="unreadCount"/>
			</property>
			<property type="text" name="url" code="flUR" access="r" description="The subscription feed URL">
				<cocoa key="feedURL"/>
			</property>
			<property type="folder" name="applescriptContainer" code="flXP" hidden="yes">
				<cocoa key="applescriptContainer"/>
			</property>
			<element type="article" access="r">
				<cocoa key="articles"/>
			</element>
			<element type="folder">
				<cocoa key="appleScriptChildren"/>
			</element>
		</class>
		<class name="article" plural="articles" code="VNar" description="A single article">
			<cocoa class="Article"/>
			<property type="text" name="author" code="arAU" access="r" description="The article&apos;s author">
				<cocoa key="author"/>
			</property>
			<property type="text" name="body" code="arTX" access="r" description="The contents of the article">
				<cocoa key="body"/>
			</property>
			<property type="folder" name="containing folder" code="arFL" access="r" description="The folder to which this article belongs">
				<cocoa key="containingFolder"/>
			</property>
			<property type="date" name="date" code="arDA" access="r" description="The date when the article was posted">
				<cocoa key="date"/>
			</property>
			<property type="boolean" name="deleted" code="arDL" access="r" description="Whether the article has been deleted">
				<cocoa key="isDeleted"/>
			</property>
			<property type="boolean" name="flag" code="arFG" access="r" description="Whether the article has been flagged">
				<cocoa key="isFlagged"/>
			</property>
			<property type="text" name="guid" code="arGD" access="r" description="The unique GUID of the article">
				<cocoa key="guid"/>
			</property>
			<property type="text" name="link" code="arLK" access="r" description="The link to the article source">
				<cocoa key="link"/>
			</property>
			<property type="boolean" name="read" code="arRD" access="r" description="Whether the article has been read">
				<cocoa key="isRead"/>
			</property>
			<property type="text" name="title" code="arTL" access="r" description="The article&apos;s title">
				<cocoa key="title"/>
			</property>
			<property type="article" name="applescriptContainer" code="arXP" hidden="yes">
				<cocoa key="applescriptContainer"/>
			</property>
		</class>
		<command name="compact database" code="VnnaVnCD" description="Compact the article database">
			<cocoa name="CompactDatabase"/>
		</command>
		<command name="create new subscription" code="VnnanwSB" description="Create a new subscription">
			<cocoa name="NewSubscription"/>
			<parameter type="text" name="for" code="urlS" description="The URL of the new feed">
				<cocoa key="URL"/>
			</parameter>
			<parameter type="folder" name="under" code="unFL" optional="yes" description="Optional folder under which the subscription will be created">
				<cocoa key="UnderFolder"/>
			</parameter>
		</command>
		<command name="empty trash" code="VnnaVnET" description="Empty the trash">
			<cocoa name="EmptyTrash"/>
		</command>
		<command name="export subscriptions" code="VnnaexSS" description="Export subscriptions from specified folders to a file">
			<cocoa name="ExportSubscriptions"/>
			<parameter type="text" name="to" code="vflN" description="Specify the name of the file to which the subscriptions will be exported">
				<cocoa key="FileName"/>
			</parameter>
			<parameter type="folder" name="from" code="flnn" optional="yes" description="Specify the folder to be exported">
				<cocoa key="Folder"/>
			</parameter>
		</command>
		<command name="GetURL" code="GURLGURL" description="Open a URL">
			<cocoa name="GetURL" class="ViennaScriptCommand"/>
		</command>
		<command name="import subscriptions" code="VnnaipSS" description="Imports subscriptions from a file">
			<cocoa name="ImportSubscriptions"/>
			<parameter type="text" name="from" code="vflN" description="Specify the name of the file you wish to import">
				<cocoa key="FileName"/>
			</parameter>
		</command>
		<command name="mark all read" code="Vnnavnma" description="Mark read all unread articles in the specified folder">
			<cocoa name="MarkAllRead"/>
			<parameter type="folder" name="in" code="flnn" description="Specify the name of the folder where all articles will be marked read">
				<cocoa key="Folder"/>
			</parameter>
		</command>
		<command name="mark all subscriptions read" code="VnnaVnMs" description="Mark read all unread articles in all folders">
			<cocoa name="MarkAllSubscriptionsRead"/>
		</command>
		<command name="refresh all subscriptions" code="VnnaVnCN" description="Refresh all subscribed folders">
			<cocoa name="RefreshAllSubscriptions"/>
		</command>
		<command name="refresh subscription" code="Vnnavnrs" description="Refresh selected folders">
			<cocoa name="RefreshSubscription"/>
			<parameter type="folder" name="for" code="flnn" description="Specify the name of the folder to be refreshed">
				<cocoa key="Folder"/>
			</parameter>
		</command>
		<command name="reset folder sort" code="VnnaVnFS" description="Reset the folder sort order">
			<cocoa name="ResetFolderSort"/>
		</command>
	</suite>
</dictionary>
